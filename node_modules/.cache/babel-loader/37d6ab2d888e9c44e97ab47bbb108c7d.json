{"ast":null,"code":"var _jsxFileName = \"/Users/austinharms/Desktop/Projects/github-finder/src/context/github/GithubContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport { createRenderer } from \"react-dom/test-utils\";\nimport githubReducer from \"./GithubReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GithubContext = /*#__PURE__*/createContext();\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\nexport const GithubProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(githubReducer, initialState); //Get search results\n\n  const searchUsers = async text => {\n    setLoading();\n    const params = new URLSearchParams({\n      q: text\n    });\n    const response = await fetch(`${GITHUB_URL}/search/users?${params}`, {\n      headers: {\n        Authorization: `token ${TOKEN}`\n      }\n    });\n    const {\n      items\n    } = await response.json();\n    dispatch({\n      type: 'GET_USERS',\n      payload: items\n    });\n  }; //Get single user\n\n\n  const getUser = async login => {\n    setLoading();\n    const response = await fetch(`${GITHUB_URL}/users/${login}`, {\n      headers: {\n        Authorization: `token ${TOKEN}`\n      }\n    });\n\n    if (response.status === 404) {\n      window.location = '/not-found';\n    } else {\n      const data = await response.json();\n      dispatch({\n        type: 'GET_USER',\n        payload: data\n      });\n    }\n  }; //Get user repos\n\n\n  const getUserRepos = async login => {\n    setLoading();\n    const params = new URLSearchParams({\n      sort: 'created',\n      per_page: 10\n    });\n    const response = await fetch(`${GITHUB_URL}/users/${login}/repos?${params}`, {\n      headers: {\n        Authorization: `token ${TOKEN}`\n      }\n    });\n    const data = await response.json();\n    dispatch({\n      type: 'GET_REPOS',\n      payload: data\n    });\n  }; //Set loading\n\n\n  const setLoading = () => {\n    dispatch({\n      type: 'SET_LOADING'\n    });\n  };\n\n  const clearUsers = () => {\n    dispatch({\n      type: 'CLEAR_USERS'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: { ...state,\n      clearUsers,\n      getUser,\n      getUserRepos\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GithubProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubProvider;\nexport default GithubContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"names":["createContext","useReducer","createRenderer","githubReducer","GithubContext","GITHUB_URL","process","env","REACT_APP_GITHUB_URL","TOKEN","REACT_APP_GITHUB_TOKEN","GithubProvider","children","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","params","URLSearchParams","q","response","fetch","headers","Authorization","items","json","type","payload","getUser","login","status","window","location","data","getUserRepos","sort","per_page","clearUsers"],"sources":["/Users/austinharms/Desktop/Projects/github-finder/src/context/github/GithubContext.jsx"],"sourcesContent":["import { createContext, useReducer } from \"react\";\nimport { createRenderer } from \"react-dom/test-utils\";\nimport githubReducer from \"./GithubReducer\";\n\nconst GithubContext = createContext();\n\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\n\nexport const GithubProvider = ({children}) => {\n    const initialState = {\n        users: [],\n        user: {},\n        repos: [],\n        loading: false\n    }\n\n    const [state, dispatch] = useReducer(githubReducer, initialState);\n\n    //Get search results\n    const searchUsers = async (text) => {\n        setLoading();\n\n        const params = new URLSearchParams({\n            q: text\n        })\n        const response = await fetch(`${GITHUB_URL}/search/users?${params}`, {\n            headers: {\n                Authorization: `token ${TOKEN}`\n            }\n        })\n        const {items} = await response.json();\n        dispatch({\n            type: 'GET_USERS',\n            payload: items\n        })\n    }\n\n    //Get single user\n    const getUser = async (login) => {\n        setLoading();\n\n        const response = await fetch(`${GITHUB_URL}/users/${login}`, {\n            headers: {\n                Authorization: `token ${TOKEN}`\n            }\n        })\n        if(response.status === 404) {\n            window.location = '/not-found'\n        } else {\n            const data = await response.json();\n            dispatch({\n                type: 'GET_USER',\n                payload: data\n            })\n        } \n    }\n\n    //Get user repos\n    const getUserRepos = async (login) => {\n        setLoading();\n\n        const params = new URLSearchParams({\n            sort: 'created',\n            per_page: 10\n        })\n\n        const response = await fetch(`${GITHUB_URL}/users/${login}/repos?${params}`, {\n            headers: {\n                Authorization: `token ${TOKEN}`\n            }\n        })\n        const data = await response.json();\n\n        dispatch({\n            type: 'GET_REPOS',\n            payload: data\n        })\n    }\n\n    //Set loading\n    const setLoading = () => {\n        dispatch({type: 'SET_LOADING'});\n    }\n\n    const clearUsers = () => {\n        dispatch({type: 'CLEAR_USERS'})\n    }\n\n    return (\n        <GithubContext.Provider value={{\n            ...state,\n            clearUsers,\n            getUser,\n            getUserRepos\n        }}>\n            {children}\n        </GithubContext.Provider>\n    )\n}\n\nexport default GithubContext;"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,aAAa,gBAAGJ,aAAa,EAAnC;AAEA,MAAMK,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA/B;AACA,MAAMC,KAAK,GAAGH,OAAO,CAACC,GAAR,CAAYG,sBAA1B;AAEA,OAAO,MAAMC,cAAc,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAC1C,MAAMC,YAAY,GAAG;IACjBC,KAAK,EAAE,EADU;IAEjBC,IAAI,EAAE,EAFW;IAGjBC,KAAK,EAAE,EAHU;IAIjBC,OAAO,EAAE;EAJQ,CAArB;EAOA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,UAAU,CAACE,aAAD,EAAgBU,YAAhB,CAApC,CAR0C,CAU1C;;EACA,MAAMO,WAAW,GAAG,MAAOC,IAAP,IAAgB;IAChCC,UAAU;IAEV,MAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoB;MAC/BC,CAAC,EAAEJ;IAD4B,CAApB,CAAf;IAGA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEtB,UAAW,iBAAgBkB,MAAO,EAAtC,EAAyC;MACjEK,OAAO,EAAE;QACLC,aAAa,EAAG,SAAQpB,KAAM;MADzB;IADwD,CAAzC,CAA5B;IAKA,MAAM;MAACqB;IAAD,IAAU,MAAMJ,QAAQ,CAACK,IAAT,EAAtB;IACAZ,QAAQ,CAAC;MACLa,IAAI,EAAE,WADD;MAELC,OAAO,EAAEH;IAFJ,CAAD,CAAR;EAIH,CAhBD,CAX0C,CA6B1C;;;EACA,MAAMI,OAAO,GAAG,MAAOC,KAAP,IAAiB;IAC7Bb,UAAU;IAEV,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEtB,UAAW,UAAS8B,KAAM,EAA9B,EAAiC;MACzDP,OAAO,EAAE;QACLC,aAAa,EAAG,SAAQpB,KAAM;MADzB;IADgD,CAAjC,CAA5B;;IAKA,IAAGiB,QAAQ,CAACU,MAAT,KAAoB,GAAvB,EAA4B;MACxBC,MAAM,CAACC,QAAP,GAAkB,YAAlB;IACH,CAFD,MAEO;MACH,MAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACK,IAAT,EAAnB;MACAZ,QAAQ,CAAC;QACLa,IAAI,EAAE,UADD;QAELC,OAAO,EAAEM;MAFJ,CAAD,CAAR;IAIH;EACJ,CAjBD,CA9B0C,CAiD1C;;;EACA,MAAMC,YAAY,GAAG,MAAOL,KAAP,IAAiB;IAClCb,UAAU;IAEV,MAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoB;MAC/BiB,IAAI,EAAE,SADyB;MAE/BC,QAAQ,EAAE;IAFqB,CAApB,CAAf;IAKA,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEtB,UAAW,UAAS8B,KAAM,UAASZ,MAAO,EAA9C,EAAiD;MACzEK,OAAO,EAAE;QACLC,aAAa,EAAG,SAAQpB,KAAM;MADzB;IADgE,CAAjD,CAA5B;IAKA,MAAM8B,IAAI,GAAG,MAAMb,QAAQ,CAACK,IAAT,EAAnB;IAEAZ,QAAQ,CAAC;MACLa,IAAI,EAAE,WADD;MAELC,OAAO,EAAEM;IAFJ,CAAD,CAAR;EAIH,CAnBD,CAlD0C,CAuE1C;;;EACA,MAAMjB,UAAU,GAAG,MAAM;IACrBH,QAAQ,CAAC;MAACa,IAAI,EAAE;IAAP,CAAD,CAAR;EACH,CAFD;;EAIA,MAAMW,UAAU,GAAG,MAAM;IACrBxB,QAAQ,CAAC;MAACa,IAAI,EAAE;IAAP,CAAD,CAAR;EACH,CAFD;;EAIA,oBACI,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE,EAC3B,GAAGd,KADwB;MAE3ByB,UAF2B;MAG3BT,OAH2B;MAI3BM;IAJ2B,CAA/B;IAAA,UAMK5B;EANL;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH,CA1FM;;GAAMD,c;;KAAAA,c;AA4Fb,eAAeP,aAAf"},"metadata":{},"sourceType":"module"}